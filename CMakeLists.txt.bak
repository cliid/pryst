cmake_minimum_required(VERSION 3.10)
project(Pryst VERSION 1.0)

# Set C++17 as required
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Enable testing
enable_testing()

# Find LLVM 14
find_package(LLVM 14 REQUIRED CONFIG)
message(STATUS "Found LLVM ${LLVM_PACKAGE_VERSION}")
message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")

# Add LLVM flags and definitions
include_directories(${LLVM_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})

# Get LLVM library directory and add to link path
link_directories(/usr/lib/llvm-14/lib)

# Get LLVM library list from llvm-config
execute_process(
    COMMAND llvm-config-14 --libs
    OUTPUT_VARIABLE LLVM_LIBS
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
message(STATUS "LLVM Libs from llvm-config: ${LLVM_LIBS}")

# Find Boehm GC
find_package(PkgConfig REQUIRED)
pkg_check_modules(GC REQUIRED bdw-gc)
include_directories(${GC_INCLUDE_DIRS})
link_directories(${GC_LIBRARY_DIRS})

# Set up ANTLR4 with platform-specific paths
if(DEFINED ENV{ANTLR4_ROOT})
    set(ANTLR4_ROOT $ENV{ANTLR4_ROOT})
else()
    if(APPLE)
        set(ANTLR4_ROOT "/usr/local")
    else()
        set(ANTLR4_ROOT "/usr/local")
    endif()
endif()

set(ANTLR4_JAR_LOCATION ${ANTLR4_ROOT}/lib/antlr-4.13.2-complete.jar)
set(ANTLR4_INCLUDE_DIR ${ANTLR4_ROOT}/include/antlr4-runtime)
if(APPLE)
    set(ANTLR4_RUNTIME_LIBRARIES ${ANTLR4_ROOT}/lib/libantlr4-runtime.dylib)
else()
    set(ANTLR4_RUNTIME_LIBRARIES ${ANTLR4_ROOT}/lib/libantlr4-runtime.so)
endif()

# Add ANTLR4 runtime library
add_library(antlr4_runtime SHARED IMPORTED)
set_target_properties(antlr4_runtime PROPERTIES
    IMPORTED_LOCATION ${ANTLR4_RUNTIME_LIBRARIES}
    INTERFACE_INCLUDE_DIRECTORIES ${ANTLR4_INCLUDE_DIR}
)

# LLVM libraries are handled by find_package(LLVM)

# Function to set up ANTLR4 code generation
function(antlr4_generate_cpp name grammar_file)
    set(GENERATED_DIR "${CMAKE_SOURCE_DIR}/src/generated")
    file(MAKE_DIRECTORY ${GENERATED_DIR})

    add_custom_command(
        OUTPUT
            ${GENERATED_DIR}/${name}Lexer.cpp
            ${GENERATED_DIR}/${name}Parser.cpp
            ${GENERATED_DIR}/${name}BaseVisitor.cpp
            ${GENERATED_DIR}/${name}Visitor.cpp
        COMMAND
            java -jar ${ANTLR4_JAR_LOCATION} -Dlanguage=Cpp -no-listener -visitor
            -package pryst
            -o ${GENERATED_DIR}
            ${CMAKE_CURRENT_SOURCE_DIR}/${grammar_file}
        DEPENDS
            ${CMAKE_CURRENT_SOURCE_DIR}/${grammar_file}
    )
endfunction()

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/src/generated
    ${ANTLR4_INCLUDE_DIR}
)

# Add source directory
add_subdirectory(src)
