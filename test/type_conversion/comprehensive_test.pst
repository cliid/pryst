// Comprehensive type conversion test
fn main() -> int {
    // Test toString conversions
    let intStr = toString(42);
    print(intStr);  // Should print "42"

    let floatStr = toString(3.14);
    print(floatStr);  // Should print "3.140000"

    let boolStr = toString(true);
    print(boolStr);  // Should print "true"

    // Test toInt conversions
    let strInt = toInt("42");
    print(toString(strInt));  // Should print "42"

    let floatInt = toInt(3.14);
    print(toString(floatInt));  // Should print "3"

    let boolInt = toInt(true);
    print(toString(boolInt));  // Should print "1"

    // Test toFloat conversions
    let strFloat = toFloat("3.14");
    print(toString(strFloat));  // Should print "3.140000"

    let intFloat = toFloat(42);
    print(toString(intFloat));  // Should print "42.000000"

    let boolFloat = toFloat(true);
    print(toString(boolFloat));  // Should print "1.000000"

    // Test edge cases
    print(toString(toInt("invalid")));  // Should print "0"
    print(toString(toFloat("invalid"))); // Should print "0.000000"

    // Test memory management with string operations
    let longStr = "This is a long string to test memory allocation";
    print(toString(toInt(longStr)));  // Should print "0"

    return 0;
}
