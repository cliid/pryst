// Test primitive type conversions
let intVal = 42;
let floatVal = 3.14;
let strVal = "123";
let boolVal = true;

// Int conversions
let intToFloat = (float) intVal;    // Should work
let intToStr = (str) intVal;        // Should work
let intToBool = (bool) intVal;      // Should work (non-zero = true)

// Float conversions
let floatToInt = (int) floatVal;    // Should work (truncates)
let floatToStr = (str) floatVal;    // Should work
let floatToBool = (bool) floatVal;  // Should work (non-zero = true)

// String conversions
let strToInt = (int) strVal;        // Should work for valid numbers
let strToFloat = (float) strVal;    // Should work for valid numbers
let strToBool = (bool) "true";      // Should work for "true"/"false"

// Invalid conversions that should fail
try {
    let invalidStr = (int) "not a number";
} catch (ParseError e) {
    print("Caught expected parse error");
}

// Constructor syntax should fail for primitives
try {
    let invalidSyntax = int("123");  // Should fail
} catch (TypeError e) {
    print("Caught expected type error");
}
